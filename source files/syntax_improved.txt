PROGRAM -> start_prog DEFINITIONS start_com COMMANDS end_prog
DEFINITIONS -> DEFINITION DEFINITION_MAYBE
DEFINITION_MAYBE -> eps
DEFINITION_MAYBE -> ; DEFINITIONS
DEFINITION -> TYPE DEFINITION_TYPE
DEFINITION -> id : exception
DEFINITION_TYPE -> ID_LIST
DEFINITION_TYPE -> const id := number
TYPE -> integer 
TYPE -> real
ID_LIST -> id ID_LIST_MAYBE
ID_LIST_MAYBE -> eps
ID_LIST_MAYBE -> , ID_LIST
COMMANDS -> COMMAND COMMAND_MAYBE
COMMAND_MAYBE -> eps
COMMAND_MAYBE -> ; COMMANDS
COMMAND -> id := EXPRESSION
COMMAND -> if CONDITION then COMMANDS else COMMANDS end_if
COMMAND -> loop COMMANDS while CONDITION end_loop
COMMAND -> embed DEFINITIONS start_com COMMANDS end_embed
COMMAND -> raise id
EXPRESSION -> EXPRESSION_SIMPLE EXPRESSION_MAYBE
EXPRESSION_SIMPLE -> number
EXPRESSION_SIMPLE -> id
EXPRESSION_SIMPLE -> (EXPRESSION)
EXPRESSION_MAYBE -> eps
EXPRESSION_MAYBE -> ar_op EXPRESSION
CONDITION -> EXPERSSION rel_op EXPRESSIOn


